# 0 "genex.S"
# 0 "<built-in>"
# 0 "<命令行>"
# 1 "genex.S"
# 12 "genex.S"
# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asm.h" 1
# 16 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asm.h"
# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/abidefs.h" 1
# 17 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asm.h" 2
# 13 "genex.S" 2
# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asmmacro.h" 1
# 12 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asmmacro.h"
# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asm-offsets.h" 1
# 13 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asmmacro.h" 2
# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/regdef.h" 1
# 14 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asmmacro.h" 2
# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/fpregdef.h" 1
# 15 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asmmacro.h" 2
# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/machine.h" 1





       




# 1 "/home/leon/download/sel4-test/kernel/include/util.h" 1






       
# 12 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/machine.h" 2
# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/machine/hardware.h" 1







       



# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/64/mode/hardware.h" 1






       

# 1 "/home/leon/download/sel4-test/kernel/include/config.h" 1






       

# 1 "/home/leon/download/sel4-test/kernel/libsel4/include/sel4/config.h" 1






       



# 1 "/home/leon/download/sel4-test/t/kernel/autoconf/autoconf.h" 1

       

# 1 "/home/leon/download/sel4-test/t/kernel/gen_config/kernel/gen_config.h" 1

       
# 5 "/home/leon/download/sel4-test/t/kernel/autoconf/autoconf.h" 2
# 12 "/home/leon/download/sel4-test/kernel/libsel4/include/sel4/config.h" 2
# 10 "/home/leon/download/sel4-test/kernel/include/config.h" 2
# 10 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/64/mode/hardware.h" 2
# 13 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/machine/hardware.h" 2
# 13 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/machine.h" 2
# 16 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/asmmacro.h" 2




 .macro parse_v var val
 \var = \val
 .endm

 .macro parse_r var r
 \var = -1
 .ifc \r, $r0
 \var = 0
 .endif
 .ifc \r, $r1
 \var = 1
 .endif
 .ifc \r, $r2
 \var = 2
 .endif
 .ifc \r, $r3
 \var = 3
 .endif
 .ifc \r, $r4
 \var = 4
 .endif
 .ifc \r, $r5
 \var = 5
 .endif
 .ifc \r, $r6
 \var = 6
 .endif
 .ifc \r, $r7
 \var = 7
 .endif
 .ifc \r, $r8
 \var = 8
 .endif
 .ifc \r, $r9
 \var = 9
 .endif
 .ifc \r, $r10
 \var = 10
 .endif
 .ifc \r, $r11
 \var = 11
 .endif
 .ifc \r, $r12
 \var = 12
 .endif
 .ifc \r, $r13
 \var = 13
 .endif
 .ifc \r, $r14
 \var = 14
 .endif
 .ifc \r, $r15
 \var = 15
 .endif
 .ifc \r, $r16
 \var = 16
 .endif
 .ifc \r, $r17
 \var = 17
 .endif
 .ifc \r, $r18
 \var = 18
 .endif
 .ifc \r, $r19
 \var = 19
 .endif
 .ifc \r, $r20
 \var = 20
 .endif
 .ifc \r, $r21
 \var = 21
 .endif
 .ifc \r, $r22
 \var = 22
 .endif
 .ifc \r, $r23
 \var = 23
 .endif
 .ifc \r, $r24
 \var = 24
 .endif
 .ifc \r, $r25
 \var = 25
 .endif
 .ifc \r, $r26
 \var = 26
 .endif
 .ifc \r, $r27
 \var = 27
 .endif
 .ifc \r, $r28
 \var = 28
 .endif
 .ifc \r, $r29
 \var = 29
 .endif
 .ifc \r, $r30
 \var = 30
 .endif
 .ifc \r, $r31
 \var = 31
 .endif
 .iflt \var
 .error "Unable to parse register name \r"
 .endif
 .endm

 .macro cpu_save_nonscratch thread
 stptr.d $r23, \thread, 2840
 stptr.d $r24, \thread, 2848
 stptr.d $r25, \thread, 2856
 stptr.d $r26, \thread, 2864
 stptr.d $r27, \thread, 2872
 stptr.d $r28, \thread, 2880
 stptr.d $r29, \thread, 2888
 stptr.d $r30, \thread, 2896
 stptr.d $r31, \thread, 2904
 stptr.d $r3, \thread, 2824
 stptr.d $r22, \thread, 2832
 .endm

 .macro cpu_restore_nonscratch thread
 ldptr.d $r23, \thread, 2840
 ldptr.d $r24, \thread, 2848
 ldptr.d $r25, \thread, 2856
 ldptr.d $r26, \thread, 2864
 ldptr.d $r27, \thread, 2872
 ldptr.d $r28, \thread, 2880
 ldptr.d $r29, \thread, 2888
 ldptr.d $r30, \thread, 2896
 ldptr.d $r31, \thread, 2904
 ldptr.d $r1, \thread, 2816
 ldptr.d $r3, \thread, 2824
 ldptr.d $r22, \thread, 2832
 .endm

 .macro fpu_save_csr thread tmp
 movfcsr2gr \tmp, $r0
 stptr.w \tmp, \thread, 0
 .endm

 .macro fpu_restore_csr thread tmp
 ldptr.w \tmp, \thread, 0
 movgr2fcsr $r0, \tmp
 .endm

 .macro fpu_save_cc thread tmp0 tmp1
 movcf2gr \tmp0, $fcc0
 move \tmp1, \tmp0
 movcf2gr \tmp0, $fcc1
 bstrins.d \tmp1, \tmp0, 15, 8
 movcf2gr \tmp0, $fcc2
 bstrins.d \tmp1, \tmp0, 23, 16
 movcf2gr \tmp0, $fcc3
 bstrins.d \tmp1, \tmp0, 31, 24
 movcf2gr \tmp0, $fcc4
 bstrins.d \tmp1, \tmp0, 39, 32
 movcf2gr \tmp0, $fcc5
 bstrins.d \tmp1, \tmp0, 47, 40
 movcf2gr \tmp0, $fcc6
 bstrins.d \tmp1, \tmp0, 55, 48
 movcf2gr \tmp0, $fcc7
 bstrins.d \tmp1, \tmp0, 63, 56
 stptr.d \tmp1, \thread, 8
 .endm

 .macro fpu_restore_cc thread tmp0 tmp1
 ldptr.d \tmp0, \thread, 8
 bstrpick.d \tmp1, \tmp0, 7, 0
 movgr2cf $fcc0, \tmp1
 bstrpick.d \tmp1, \tmp0, 15, 8
 movgr2cf $fcc1, \tmp1
 bstrpick.d \tmp1, \tmp0, 23, 16
 movgr2cf $fcc2, \tmp1
 bstrpick.d \tmp1, \tmp0, 31, 24
 movgr2cf $fcc3, \tmp1
 bstrpick.d \tmp1, \tmp0, 39, 32
 movgr2cf $fcc4, \tmp1
 bstrpick.d \tmp1, \tmp0, 47, 40
 movgr2cf $fcc5, \tmp1
 bstrpick.d \tmp1, \tmp0, 55, 48
 movgr2cf $fcc6, \tmp1
 bstrpick.d \tmp1, \tmp0, 63, 56
 movgr2cf $fcc7, \tmp1
 .endm

 .macro fpu_save_double thread tmp
 li.w \tmp, 16
 add.d \tmp, \tmp, \thread
 fst.d $f0, \tmp, 16 - 16
 fst.d $f1, \tmp, 48 - 16
 fst.d $f2, \tmp, 80 - 16
 fst.d $f3, \tmp, 112 - 16
 fst.d $f4, \tmp, 144 - 16
 fst.d $f5, \tmp, 176 - 16
 fst.d $f6, \tmp, 208 - 16
 fst.d $f7, \tmp, 240 - 16
 fst.d $f8, \tmp, 272 - 16
 fst.d $f9, \tmp, 304 - 16
 fst.d $f10, \tmp, 336 - 16
 fst.d $f11, \tmp, 368 - 16
 fst.d $f12, \tmp, 400 - 16
 fst.d $f13, \tmp, 432 - 16
 fst.d $f14, \tmp, 464 - 16
 fst.d $f15, \tmp, 496 - 16
 fst.d $f16, \tmp, 528 - 16
 fst.d $f17, \tmp, 560 - 16
 fst.d $f18, \tmp, 592 - 16
 fst.d $f19, \tmp, 624 - 16
 fst.d $f20, \tmp, 656 - 16
 fst.d $f21, \tmp, 688 - 16
 fst.d $f22, \tmp, 720 - 16
 fst.d $f23, \tmp, 752 - 16
 fst.d $f24, \tmp, 784 - 16
 fst.d $f25, \tmp, 816 - 16
 fst.d $f26, \tmp, 848 - 16
 fst.d $f27, \tmp, 880 - 16
 fst.d $f28, \tmp, 912 - 16
 fst.d $f29, \tmp, 944 - 16
 fst.d $f30, \tmp, 976 - 16
 fst.d $f31, \tmp, 1008 - 16
 .endm

 .macro fpu_restore_double thread tmp
 li.w \tmp, 16
 add.d \tmp, \tmp, \thread
 fld.d $f0, \tmp, 16 - 16
 fld.d $f1, \tmp, 48 - 16
 fld.d $f2, \tmp, 80 - 16
 fld.d $f3, \tmp, 112 - 16
 fld.d $f4, \tmp, 144 - 16
 fld.d $f5, \tmp, 176 - 16
 fld.d $f6, \tmp, 208 - 16
 fld.d $f7, \tmp, 240 - 16
 fld.d $f8, \tmp, 272 - 16
 fld.d $f9, \tmp, 304 - 16
 fld.d $f10, \tmp, 336 - 16
 fld.d $f11, \tmp, 368 - 16
 fld.d $f12, \tmp, 400 - 16
 fld.d $f13, \tmp, 432 - 16
 fld.d $f14, \tmp, 464 - 16
 fld.d $f15, \tmp, 496 - 16
 fld.d $f16, \tmp, 528 - 16
 fld.d $f17, \tmp, 560 - 16
 fld.d $f18, \tmp, 592 - 16
 fld.d $f19, \tmp, 624 - 16
 fld.d $f20, \tmp, 656 - 16
 fld.d $f21, \tmp, 688 - 16
 fld.d $f22, \tmp, 720 - 16
 fld.d $f23, \tmp, 752 - 16
 fld.d $f24, \tmp, 784 - 16
 fld.d $f25, \tmp, 816 - 16
 fld.d $f26, \tmp, 848 - 16
 fld.d $f27, \tmp, 880 - 16
 fld.d $f28, \tmp, 912 - 16
 fld.d $f29, \tmp, 944 - 16
 fld.d $f30, \tmp, 976 - 16
 fld.d $f31, \tmp, 1008 - 16
 .endm

.macro move dst src
 slli.d \dst, \src, 0
.endm

.macro jr dst
 jirl $r0, \dst, 0
.endm

.macro jalr dst
 jirl $r1, \dst, 0
.endm

.macro not dst src
 nor \dst, \src, $r0
.endm

.macro bgt r0 r1 label
 blt \r1, \r0, \label
.endm

.macro bltz r0 label
 blt \r0, $r0, \label
.endm

.macro bgez r0 label
 bge \r0, $r0, \label
.endm
# 14 "genex.S" 2



# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/stackframe.h" 1
# 14 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/stackframe.h"
# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/thread_info.h" 1
# 15 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/stackframe.h" 2


 .macro cfi_rel_offset reg offset=0 docfi=0
 .if \docfi
 .cfi_rel_offset \reg, \offset
 .endif
 .endm

 .macro cfi_st reg offset=0 docfi=0
 cfi_rel_offset \reg, \offset, \docfi
 st.d \reg, $r3, \offset
 .endm

 .macro cfi_restore reg offset=0 docfi=0
 .if \docfi
 .cfi_restore \reg
 .endif
 .endm

 .macro cfi_ld reg offset=0 docfi=0
 ld.d \reg, $r3, \offset
 cfi_restore \reg \offset \docfi
 .endm

 .macro BACKUP_T0T1
 csrwr $r12, 0x30
 csrwr $r13, 0x31
 .endm

 .macro RELOAD_T0T1
 csrrd $r12, 0x30
 csrrd $r13, 0x31
 .endm

 .macro SAVE_TEMP docfi=0
 RELOAD_T0T1
 cfi_st $r12, 96, \docfi
 cfi_st $r13, 104, \docfi
 cfi_st $r14, 112, \docfi
 cfi_st $r15, 120, \docfi
 cfi_st $r16, 128, \docfi
 cfi_st $r17, 136, \docfi
 cfi_st $r18, 144, \docfi
 cfi_st $r19, 152, \docfi
 cfi_st $r20, 160, \docfi
 .endm

 .macro SAVE_STATIC docfi=0
 cfi_st $r23, 184, \docfi
 cfi_st $r24, 192, \docfi
 cfi_st $r25, 200, \docfi
 cfi_st $r26, 208, \docfi
 cfi_st $r27, 216, \docfi
 cfi_st $r28, 224, \docfi
 cfi_st $r29, 232, \docfi
 cfi_st $r30, 240, \docfi
 cfi_st $r31, 248, \docfi
 .endm






 .macro get_saved_sp docfi=0
 la.abs $r13, kernelsp




 move $r12, $r3
 .if \docfi
 .cfi_register $r3, $r12
 .endif
 ld.d $r3, $r13, 0
 .endm

 .macro set_saved_sp stackp temp temp2
 la.abs \temp, kernelsp



 st.d \stackp, \temp, 0
 .endm

 .macro SAVE_SOME docfi=0
 csrrd $r13, 0x1
 andi $r13, $r13, 0x3
 move $r12, $r3
 beqz $r13, 8f

 get_saved_sp docfi=\docfi
8:
 addi.d $r3, $r3, -320
 .if \docfi
 .cfi_def_cfa $r3, 0
 .endif
 cfi_st $r12, 24, \docfi
 cfi_rel_offset $r3, 24, \docfi
 st.d $r0, $r3, 0
 csrrd $r12, 0x1
 st.d $r12, $r3, 288
 csrrd $r12, 0x0
 st.d $r12, $r3, 280
 csrrd $r12, 0x2
 st.d $r12, $r3, 296
 csrrd $r12, 0x4
 st.d $r12, $r3, 304
 csrrd $r12, 0x5
 st.d $r12, $r3, 312
 cfi_st $r1, 8, \docfi
 cfi_st $r4, 32, \docfi
 cfi_st $r5, 40, \docfi
 cfi_st $r6, 48, \docfi
 cfi_st $r7, 56, \docfi
 cfi_st $r8, 64, \docfi
 cfi_st $r9, 72, \docfi
 cfi_st $r10, 80, \docfi
 cfi_st $r11, 88, \docfi
 csrrd $r1, 0x6
 st.d $r1, $r3, 264
 .if \docfi
 .cfi_rel_offset $r1, 264
 .endif
 cfi_st $r2, 16, \docfi
 cfi_st $r22, 176, \docfi


 csrrd $r12, 0x1
 andi $r12, $r12, 0x3
 beqz $r12, 9f

 li.d $r2, ~16383
 and $r2, $r2, $r3
 cfi_st $r21, 168, \docfi
 csrrd $r21, 0x33
9:
 .endm

 .macro SAVE_ALL docfi=0
 SAVE_SOME \docfi
 SAVE_TEMP \docfi
 SAVE_STATIC \docfi
 .endm

 .macro RESTORE_TEMP docfi=0
 cfi_ld $r12, 96, \docfi
 cfi_ld $r13, 104, \docfi
 cfi_ld $r14, 112, \docfi
 cfi_ld $r15, 120, \docfi
 cfi_ld $r16, 128, \docfi
 cfi_ld $r17, 136, \docfi
 cfi_ld $r18, 144, \docfi
 cfi_ld $r19, 152, \docfi
 cfi_ld $r20, 160, \docfi
 .endm

 .macro RESTORE_STATIC docfi=0
 cfi_ld $r23, 184, \docfi
 cfi_ld $r24, 192, \docfi
 cfi_ld $r25, 200, \docfi
 cfi_ld $r26, 208, \docfi
 cfi_ld $r27, 216, \docfi
 cfi_ld $r28, 224, \docfi
 cfi_ld $r29, 232, \docfi
 cfi_ld $r30, 240, \docfi
 cfi_ld $r31, 248, \docfi
 .endm

 .macro RESTORE_SOME docfi=0
 ld.d $r4, $r3, 288
 andi $r4, $r4, 0x3
 beqz $r4, 8f
 cfi_ld $r21, 168, \docfi
8:
 ld.d $r4, $r3, 264
 csrwr $r4, 0x6
 ld.d $r4, $r3, 288
 csrwr $r4, 0x1
 cfi_ld $r1, 8, \docfi
 cfi_ld $r4, 32, \docfi
 cfi_ld $r5, 40, \docfi
 cfi_ld $r6, 48, \docfi
 cfi_ld $r7, 56, \docfi
 cfi_ld $r8, 64, \docfi
 cfi_ld $r9, 72, \docfi
 cfi_ld $r10, 80, \docfi
 cfi_ld $r11, 88, \docfi
 cfi_ld $r2, 16, \docfi
 cfi_ld $r22, 176, \docfi
 .endm

 .macro RESTORE_SP_AND_RET docfi=0
 cfi_ld $r3, 24, \docfi
 ertn
 .endm

 .macro RESTORE_ALL_AND_RET docfi=0
 RESTORE_STATIC \docfi
 RESTORE_TEMP \docfi
 RESTORE_SOME \docfi
 RESTORE_SP_AND_RET \docfi
 .endm
# 18 "genex.S" 2

# 1 "/home/leon/download/sel4-test/kernel/include/arch/loongarch/arch/asm/linkage.h" 1
# 20 "genex.S" 2

 .align 5
.globl __arch_cpu_idle ASM_NL ALIGN ASM_NL __arch_cpu_idle: .cfi_startproc;

 ld.d $r12, $r2, 8
 nop
 andi $r12, $r12, _TIF_NEED_RESCHED
 bnez $r12, 1f
 nop
 nop
 nop
 idle 0

1: jirl $r0, $r1, 0
.cfi_endproc; SYM_END(__arch_cpu_idle, SYM_T_FUNC)

.globl handle_vint ASM_NL ALIGN ASM_NL handle_vint: .cfi_startproc;
 BACKUP_T0T1
 SAVE_ALL
 la.abs $r13, __arch_cpu_idle
 ld.d $r12, $r3, 264

 ori $r12, $r12, 0x1f
 xori $r12, $r12, 0x1f
 bne $r12, $r13, 1f
 st.d $r12, $r3, 264
1: move $r4, $r3
 move $r5, $r3
 la.abs $r12, do_vint
 jirl $r1, $r12, 0
 RESTORE_ALL_AND_RET
.cfi_endproc; SYM_END(handle_vint, SYM_T_FUNC)

.globl except_vec_cex ASM_NL ALIGN ASM_NL except_vec_cex: .cfi_startproc;
 b cache_parity_error
.cfi_endproc; SYM_END(except_vec_cex, SYM_T_FUNC)

 .macro build_prep_badv
 csrrd $r12, 0x7
 st.d $r12, $r3, 272
 .endm

 .macro build_prep_fcsr
 movfcsr2gr $r5, $r0
 .endm

 .macro build_prep_none
 .endm

 .macro BUILD_HANDLER exception handler prep
 .align 5
 .globl handle_\exception ASM_NL ALIGN ASM_NL handle_\exception: .cfi_startproc;
 BACKUP_T0T1
 SAVE_ALL
 build_prep_\prep
 move $r4, $r3
 la.abs $r12, do_\handler
 jirl $r1, $r12, 0
 RESTORE_ALL_AND_RET
 .cfi_endproc; SYM_END(handle_\exception, SYM_T_FUNC)
 .endm

 BUILD_HANDLER ade ade badv
 BUILD_HANDLER ale ale badv
 BUILD_HANDLER bp bp none
 BUILD_HANDLER fpe fpe fcsr
 BUILD_HANDLER fpu fpu none
 BUILD_HANDLER lsx lsx none
 BUILD_HANDLER lasx lasx none
 BUILD_HANDLER lbt lbt none
 BUILD_HANDLER ri ri none
 BUILD_HANDLER watch watch none
 BUILD_HANDLER reserved reserved none

.globl handle_sys ASM_NL ALIGN ASM_NL handle_sys: .cfi_startproc;
 la.abs $r12, handle_syscall
 jirl $r0, $r12, 0
.cfi_endproc; SYM_END(handle_sys, SYM_T_FUNC)
